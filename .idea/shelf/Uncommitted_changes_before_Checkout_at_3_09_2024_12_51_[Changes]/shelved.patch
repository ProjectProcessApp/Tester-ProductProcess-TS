Index: src/test/java/tester_productprocess_ts/stepDefinitions/Anamenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tester_productprocess_ts.stepDefinitions;\r\n\r\n\r\nimport com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter;\r\nimport io.cucumber.java.Scenario;\r\nimport io.cucumber.java.en.And;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\nimport jdk.javadoc.doclet.Reporter;\r\nimport org.apache.poi.ss.formula.functions.T;\r\nimport org.junit.Assert;\r\nimport org.openqa.selenium.JavascriptExecutor;\r\nimport org.openqa.selenium.Keys;\r\nimport org.openqa.selenium.WebElement;\r\nimport org.openqa.selenium.interactions.Actions;\r\nimport org.openqa.selenium.support.ui.Select;\r\nimport tester_productprocess_ts.utilities.uiUtilities.ConfigReader;\r\nimport tester_productprocess_ts.utilities.uiUtilities.Driver;\r\nimport tester_productprocess_ts.utilities.uiUtilities.ReusableMethods;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Properties;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport static tester_productprocess_ts.utilities.uiUtilities.ReusableMethods.*;\r\n\r\npublic class Anamenu {\r\n\r\n    String header = \"ANA SAYFA\";\r\n    tester_productprocess_ts.pages.Anamenu anamenu = new tester_productprocess_ts.pages.Anamenu();\r\n    Actions action=new Actions(Driver.getDriver());\r\n\r\n    @When(\"Anasayfaya gidilir\")\r\n    public void anasayfaya_gidilir() {\r\n        Driver.getDriver().get(ConfigReader.getProperty(\"url\"));\r\n    }\r\n\r\n    @Then(\"Anasayfada oldugu dogrulanir\")\r\n    public void anasayfada_oldugu_dogrulanir() {\r\n        String anasayfaHeaderText = anamenu.AnasayfaHeader.getText();\r\n        String Header = \"ANA SAYFA\";\r\n        assertEquals(\"Kullanici anasayfada\",header, anasayfaHeaderText);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Anasayfa aciliyor.\");\r\n    }\r\n\r\n    @When(\"Ana giris ekraninda hicbir kullanici unvanina tiklamadan sifre giris ekranina erisememelidir\")\r\n    public void ana_giris_ekraninda_hicbir_kullanici_unvanina_tiklamadan_sifre_giris_ekranina_erisememelidir() throws InterruptedException {\r\n        anamenu.AnasayfaHeader.click();\r\n        assertEquals(\"Gasan Üretim Yönetim Sistemi\", Driver.getDriver().getTitle());\r\n        anamenu.herhangibiryer.click();\r\n        assertEquals(\"Gasan Üretim Yönetim Sistemi\", Driver.getDriver().getTitle());\r\n    }\r\n\r\n    @Then(\"Talasli Imalat Amiri Butonu gorunur oldugu dogrulanir\")\r\n    public void talasli_imalat_amiri_butonu_gorunur_oldugu_dogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.talasliImalatAmiri).perform();\r\n        Assert.assertTrue(anamenu.talasliImalatAmiri.isDisplayed());\r\n        ExtentCucumberAdapter.addTestStepLog(\"Talasli Amiri butonu gorunuyor\");\r\n    }\r\n\r\n    @Then(\"Talasli Imalat Amiri Butonuna tiklanir\")\r\n    public void talasli_imalat_amiri_butonuna_tiklanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.talasliImalatAmiri).click(anamenu.talasliImalatAmiri).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Talasli Amiri butonu tiklanabilir\");\r\n    }\r\n\r\n    @Then(\"Talasli Imalat Amiri Sifre ekraninda oldugu dogrulanir\")\r\n    public void talasliImalatAmiriSifreEkranindaOlduguDogrulanir() {\r\n        String sifreTextActual = \"TALAŞLI İMALAT AMİRİ\";\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String sifreTextresult = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Talasli Amiri sifre girme ekrani aciliyor\");\r\n    }\r\n\r\n    @And(\"Giris yap butonuna tiklanir\")\r\n    public void girisYapButonunaTiklanir() throws InterruptedException {\r\n        waitForVisibility(anamenu.girisButonu,10);\r\n        action.click(anamenu.girisButonu).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Giris butonu tiklanabilir\");\r\n    }\r\n\r\n    @And(\"Talasli imalat amiri sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void talasliImalatAmiriSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"TalasliImalatAmiri\"));\r\n    }\r\n\r\n    @And(\"Sifre gizleme butonunun sifreyi gizledigi kontrol edllir\")\r\n    public void sifreGizlemeButonununSifreyiGizledigiKontrolEdllir() {\r\n        anamenu.goz.click();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Sifre gorulebiliyor.\");\r\n    }\r\n\r\n    @And(\"Sifre gizleme butonunun sifreyi tekrar gorunur hale getirdigi kontrol edllir\")\r\n    public void sifreGizlemeButonununSifreyiTekrarGorunurHaleGetirdigiKontrolEdllir() throws InterruptedException {\r\n        waitForVisibility(anamenu.goz,10);\r\n        anamenu.goz.click();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Sifre gizlenebiliyor.\");\r\n    }\r\n\r\n    @Then(\"Talasli Imalat Amirinin kendi sorumluluk sayfasina gectigi dogrulanir\")\r\n    public void talasliImalatAmirininKendiSorumlulukSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String talasliHeader = \"TALAŞLI İMALAT AMİRİ\";\r\n        assertEquals(talasliHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Talasli imalat Amirinin sayfasina gecebiliyor.\");\r\n    }\r\n\r\n    @And(\"sifre kutucuguna gecersiz bir {string} girilir\")\r\n    public void sifreKutucugunaGecersizBirGirilir(String arg0) throws InterruptedException {\r\n        waitForVisibility(anamenu.sifreKutusu,10);\r\n        anamenu.sifreKutusu.sendKeys(arg0);\r\n    }\r\n\r\n    @Then(\"uygun hata mesajinin goruntulendigi dogrulanir {string}\")\r\n    public void uygunHataMesajininGoruntulendigiDogrulanir(String errorMessage) {\r\n        waitForVisibility(anamenu.ilkGirisHataMesaji,10);\r\n        String actualErrorMessage = anamenu.ilkGirisHataMesaji.getText();\r\n        assertEquals(\"Beklenen hata mesajı görüntülenmedi\", errorMessage, actualErrorMessage);\r\n    }\r\n\r\n    @Then(\"Polisaj amiri butonunun gorunur oldugu dogrulanir\")\r\n    public void polisajAmiriButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.polisajAmiri).perform();\r\n        anamenu.polisajAmiri.isDisplayed();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Polisaj Amiri Butonu gorulebiliyor\");\r\n    }\r\n\r\n    @And(\"Polisaj amiri butonuna tiklanir\")\r\n    public void polisajAmiriButonunaTiklanir() throws InterruptedException {\r\n        action.click(anamenu.polisajAmiri).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Polisaj Amiri Butonu tiklanabiliyor\");\r\n    }\r\n\r\n    @Then(\"Polisaj amiri ekraninda oldugu dogrulanir\")\r\n    public void polisajAmiriEkranindaOlduguDogrulanir() throws InterruptedException {\r\n        String sifreTextActual = \"POLİSAJ AMİRİ\";\r\n        waitForVisibility(anamenu.polisajAmiriSifreEkranText,10);\r\n        String sifreTextresult = anamenu.polisajAmiriSifreEkranText.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Polisaj amirinin sifre giris ekrani aciliyor\");\r\n    }\r\n\r\n    @And(\"Polisaj amiri sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void polisajAmiriSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"PolisajAmiri\"));\r\n    }\r\n\r\n    @Then(\"Polisaj amirinin kendi sorumluluk sayfasina gectigi dogrulanir\")\r\n    public void polisajAmirininKendiSorumlulukSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String polisajHeader = \"POLİSAJ AMİRİ\";\r\n        assertEquals(polisajHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Polisaj Amiri kendi sorumluluk sayfasina geciyor\");\r\n    }\r\n\r\n    @Then(\"Lift montaj amiri butonunun gorunur oldugu dogrulanir\")\r\n    public void liftMontajAmiriButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.liftmontajAmiri).perform();\r\n        Assert.assertTrue(anamenu.liftmontajAmiri.isDisplayed());\r\n        ExtentCucumberAdapter.addTestStepLog(\"Lift Montaj Amiri Butonu gorulebiliyor\");\r\n    }\r\n\r\n    @And(\"Lift montaj amiri butonuna tiklanir\")\r\n    public void liftMontajAmiriButonunaTiklanir() throws InterruptedException {\r\n        action.click(anamenu.liftmontajAmiri).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Lift Montaj Amiri Butonu tiklanabiliyor\");\r\n    }\r\n\r\n    @Then(\"Lift montaj amiri ekraninda oldugu dogrulanir\")\r\n    public void liftMontajAmiriEkranindaOlduguDogrulanir() {\r\n        String sifreTextActual = \"LİFT MONTAJ AMİRİ\";\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String sifreTextresult = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Lift Montaj Amiri sifre giris ekrani aciliyor\");\r\n    }\r\n\r\n    @And(\"Lift montaj amiri sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void liftMontajAmiriSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"LiftMontajAmiri\"));\r\n    }\r\n\r\n    @Then(\"Lift montaj amirinin kendi sorumluluk sayfasina gectigi dogrulanir\")\r\n    public void liftMontajAmirininKendiSorumlulukSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String talasliHeader = \"LİFT MONTAJ AMİRİ\";\r\n        assertEquals(talasliHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Lift Montaj Amiri kendi sorumluluk ekrani aciliyor\");\r\n    }\r\n\r\n    @Then(\"Bloklift Montaj Amiri butonunun gorunur oldugu dogrulanir\")\r\n    public void blokliftMontajAmiriButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.blokliftMontajAmiri).perform();\r\n        anamenu.blokliftMontajAmiri.isDisplayed();\r\n        ExtentCucumberAdapter.addTestStepLog(\"BlokLift Montaj Amiri butonu goruluyor\");\r\n    }\r\n\r\n    @And(\"Bloklift Montaj Amiri butonuna tiklanir\")\r\n    public void blokliftMontajAmiriButonunaTiklanir() throws InterruptedException {\r\n        action.click(anamenu.blokliftMontajAmiri).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"BlokLift Montaj Amiri butonu tiklaniyor\");\r\n    }\r\n\r\n    @Then(\"Bloklift Montaj Amiri ekraninda oldugu dogrulanir\")\r\n    public void blokliftMontajAmiriEkranindaOlduguDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String sifreTextActual = \"BLOKLİFT MONTAJ AMİRİ\";\r\n        String sifreTextresult = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n        ExtentCucumberAdapter.addTestStepLog(\"BlokLift Montaj Amiri sifre giris sayfasi aciliyor\");\r\n    }\r\n\r\n    @Then(\"Bloklift Montaj Amirinin kendi sorumluluk sayfasina gectigi dogrulanir\")\r\n    public void blokliftMontajAmirininKendiSorumlulukSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String blokliftHeader = \"BLOKLİFT MONTAJ AMİRİ\";\r\n        assertEquals(blokliftHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"BlokLift Montaj Amiri sorumluluk sayfasi aciliyor\");\r\n    }\r\n\r\n    @And(\"Bloklift Montaj Amiri sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void blokliftMontajAmiriSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"BlMontajAmiri\"));\r\n    }\r\n\r\n    @Then(\"Boyama ve Paketleme Amiri butonunun gorunur oldugu dogrulanir\")\r\n    public void boyamaVePaketlemeAmiriButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.boyamaVePaketlemeAmiri).perform();\r\n        anamenu.boyamaVePaketlemeAmiri.isDisplayed();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Boyama ve Paketleme Amiri butonu goruluyor\");\r\n    }\r\n\r\n    @And(\"Boyama ve Paketleme Amiri butonuna tiklanir\")\r\n    public void boyamaVePaketlemeAmiriButonunaTiklanir() throws InterruptedException {\r\n        action.click(anamenu.boyamaVePaketlemeAmiri).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Boyama ve Paketleme Amiri butonu tiklanabiliyor\");\r\n    }\r\n\r\n    @And(\"Boyama ve Paketleme Amiri sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void boyamaVePaketlemeAmiriSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"BoyamaPaketlemeAmiri\"));\r\n    }\r\n\r\n    @Then(\"Boyama ve Paketleme Amiri ekraninda oldugu dogrulanir\")\r\n    public void boyamaVePaketlemeAmiriEkranindaOlduguDogrulanir() {\r\n        String sifreTextActual = \"BOYAMA VE PAKETLEME AMİRİ\";\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String sifreTextresult = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Boyama ve Paketleme Amiri sifre giris sayfasi aciliyor\");\r\n    }\r\n\r\n    @Then(\"Boyama ve Paketleme Amirinin kendi sorumluluk sayfasina gectigi dogrulanir\")\r\n    public void boyamaVePaketlemeAmirininKendiSorumlulukSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String blokliftHeader = \"BOYAMA VE PAKETLEME AMİRİ\";\r\n        assertEquals(blokliftHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Boyama ve Paketleme Amiri kendi sorumluluk sayfasi aciliyor\");\r\n    }\r\n\r\n    @Then(\"Kalite Kontrol butonunun gorunur oldugu dogrulanir\")\r\n    public void kaliteKontrolButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.kaliteKontrolAmiri).perform();\r\n        anamenu.kaliteKontrolAmiri.isDisplayed();\r\n        ExtentCucumberAdapter.addTestStepLog(\"kalite kontrol Amiri butonu goruluyor\");\r\n    }\r\n\r\n    @And(\"Kalite Kontrol butonuna tiklanir\")\r\n    public void kaliteKontrolButonunaTiklanir() throws InterruptedException {\r\n        action.click(anamenu.kaliteKontrolAmiri).perform();\r\n        ExtentCucumberAdapter.addTestStepLog(\"kalite kontrol Amiri butonu tiklaniyor\");\r\n    }\r\n\r\n    @Then(\"Kalite Kontrol ekraninda oldugu dogrulanir\")\r\n    public void kaliteKontrolEkranindaOlduguDogrulanir() {\r\n        String sifreTextActual = \"KALİTE KONTROL AMİRİ\";\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String sifreTextresult = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n        ExtentCucumberAdapter.addTestStepLog(\"kalite kontrol Amiri sifre giris sayfasi aciliyor\");\r\n    }\r\n\r\n    @Then(\"Kalite Kontrol sayfasina gectigi dogrulanir\")\r\n    public void kaliteKontrolSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String blokliftHeader = \"KALİTE KONTROL AMİRİ\";\r\n        assertEquals(blokliftHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"kalite kontrol Amiri kendi sorumluluk sayfasi aciliyor\");\r\n    }\r\n\r\n    @And(\"Kalite Kontrol sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void kaliteKontrolSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"KaliteKontrol\"));\r\n    }\r\n\r\n    @Then(\"Uretim Planlama butonunun gorunur oldugu dogrulanir\")\r\n    public void uretimPlanlamaButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.menulinkleri.get(6)).perform();\r\n        anamenu.uretimPlanlama.isDisplayed();\r\n    }\r\n\r\n    @And(\"Uretim Planlama butonuna tiklanir\")\r\n    public void uretimPlanlamaButonunaTiklanir() throws InterruptedException {\r\n        clickWithJS(anamenu.menulinkleri.get(6));\r\n    }\r\n\r\n    @Then(\"Uretim Planlama ekraninda oldugu dogrulanir\")\r\n    public void uretimPlanlamaEkranindaOlduguDogrulanir() {\r\n        String sifreTextActual = \"ÜRETİM PLANLAMA\";\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String sifreTextresult = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n    }\r\n\r\n    @Then(\"Uretim Planlama sayfasina gectigi dogrulanir\")\r\n    public void uretimPlanlamaSayfasinaGectigiDogrulanir() {\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        String blokliftHeader = \"ÜRETİM PLANLAMA\";\r\n        assertEquals(blokliftHeader, anasayfa);\r\n    }\r\n\r\n    @And(\"Uretim Planlama sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void uretimPlanlamaSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"UretimPlanlama\"));\r\n    }\r\n\r\n    @Then(\"Yonetim butonunun gorunur oldugu dogrulanir\")\r\n    public void yonetimButonununGorunurOlduguDogrulanir() throws InterruptedException {\r\n        action.scrollToElement(anamenu.menulinkleri.get(7)).perform();\r\n        anamenu.yonetim.isDisplayed();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Yonetim butonu gorulebiliyor\");\r\n    }\r\n\r\n    @And(\"Yonetim butonuna tiklanir\")\r\n    public void yonetimButonunaTiklanir() throws InterruptedException {\r\n        clickWithJS(anamenu.menulinkleri.get(7));\r\n    }\r\n\r\n    @And(\"yonetici sifre kutucuguna gecerli bir {string} girilir\")\r\n    public void yoneticiSifreKutucugunaGecerliBirGirilir(String arg0) {\r\n        anamenu.sifreKutusu.sendKeys(ConfigReader.getProperty(\"yonetici\"));\r\n    }\r\n\r\n    @And(\"Yonetici Sifre gizleme butonunun sifreyi gizledigi kontrol edllir\")\r\n    public void yoneticiSifreGizlemeButonununSifreyiGizledigiKontrolEdllir() throws InterruptedException {\r\n        waitForVisibility(anamenu.yoneticiGoz,10);\r\n        anamenu.yoneticiGoz.click();\r\n    }\r\n\r\n    @And(\"Yonetici Sifre gizleme butonunun sifreyi tekrar gorunur hale getirdigi kontrol edllir\")\r\n    public void yoneticiSifreGizlemeButonununSifreyiTekrarGorunurHaleGetirdigiKontrolEdllir() throws InterruptedException {\r\n        waitForVisibility(anamenu.yoneticiGoz,10);\r\n        anamenu.yoneticiGoz.click();\r\n    }\r\n\r\n    @And(\"yonetim Giris yap butonuna tiklanir\")\r\n    public void yonetimGirisYapButonunaTiklanir() throws InterruptedException {\r\n        action.click(anamenu.yonetimGirisButonu).perform();\r\n    }\r\n\r\n    @Then(\"Yonetim Sifre ekraninda oldugu dogrulanir\")\r\n    public void yonetimSifreEkranindaOlduguDogrulanir() throws InterruptedException {\r\n        String sifreTextActual = \"YÖNETİM\";\r\n        waitForVisibility(anamenu.amirBaslikYazisi,30);\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        assertEquals(anasayfa, sifreTextActual);\r\n    }\r\n\r\n    @And(\"yonetici sifre kutucuguna gecersiz bir {string} girilir\")\r\n    public void yoneticiSifreKutucugunaGecersizBirGirilir(String arg0) throws InterruptedException {\r\n        anamenu.sifreKutusu.sendKeys(arg0);\r\n    }\r\n\r\n    @Then(\"yonetim sayfasina gectigi dogrulanir\")\r\n    public void yonetimSayfasinaGectigiDogrulanir() {\r\n        String anasayfa = anamenu.amirBaslikYazisi.getText();\r\n        waitForVisibility(anamenu.amirBaslikYazisi,10);\r\n        String yonetimHeader = \"YÖNETİM\";\r\n        assertEquals(yonetimHeader, anasayfa);\r\n        ExtentCucumberAdapter.addTestStepLog(\"Yonetim sayfasini acabiliyor\");\r\n    }\r\n\r\n    @And(\"Kullanici logout yapar\")\r\n    public void kullaniciLogoutYapar() throws InterruptedException {\r\n        waitForVisibility(anamenu.logout,30);\r\n        clickWithJS(anamenu.logout);\r\n        ExtentCucumberAdapter.addTestStepLog(\"cikis yapilabiliyor\");\r\n    }\r\n\r\n    @And(\"yonetici kullaniciya sifre atama butonuna tiklar\")\r\n    public void yoneticiKullaniciyaSifreAtamaButonunaTiklar() throws InterruptedException {\r\n        anamenu.kullaniciyaSifreAtama.click();\r\n    }\r\n\r\n    @And(\"yonetici kullaniciya sifre atama ekranina gectigini dogrular\")\r\n    public void yoneticiKullaniciyaSifreAtamaEkraninaGectiginiDogrular() throws InterruptedException {\r\n        String sifreTextActual = \"Return backŞIFRE ATAMA EKRANI Logout\";\r\n        waitForVisibility(anamenu.sifreAtamaEkraniText,10);\r\n        String sifreTextresult = anamenu.sifreAtamaEkraniText.getText();\r\n        assertEquals(sifreTextresult, sifreTextActual);\r\n    }\r\n\r\n    @And(\"yonetici return back butonuna tiklar\")\r\n    public void yoneticiReturnBackButonunaTiklar() throws InterruptedException {\r\n        waitForVisibility(anamenu.returnback,10);\r\n        anamenu.returnback.click();\r\n        waitForVisibility(anamenu.kullaniciyaSifreAtama,10);\r\n        anamenu.kullaniciyaSifreAtama.click();\r\n    }\r\n\r\n    @And(\"yonetici guncelle butonunu tiklar\")\r\n    public void yoneticiGuncelleButonunuTiklar() throws InterruptedException {\r\n        waitForVisibility(anamenu.girisButonu,10);\r\n        anamenu.girisButonu.click();\r\n        ExtentCucumberAdapter.addTestStepLog(\"Yonetim sifre guncelleyebiliyor\");\r\n    }\r\n\r\n    @And(\"yonetici kullanici secer, yeni sifre atar, guncelle butonunu tiklar ve guncellendigini kontrol eder\")\r\n    public void yoneticiKullaniciSecerYeniSifreAtarGuncelleButonunuTiklarVeGuncellendiginiKontrolEder() throws InterruptedException {\r\n        Properties properties = new Properties();\r\n        try {\r\n            FileInputStream configStream = new FileInputStream(\"configuration1.properties\");\r\n            properties.load(configStream);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            return;\r\n        }\r\n        for (String userKey : properties.stringPropertyNames()) {\r\n            String newPassword = properties.getProperty(userKey);\r\n\r\n            // Kullanıcıyı seçme\r\n            Select userSelect = new Select(anamenu.userSelectElement);\r\n            userSelect.selectByValue(userKey);\r\n            waitFor(1000);\r\n\r\n            // Yeni şifreyi girme\r\n            anamenu.passwordInput.clear();\r\n            anamenu.passwordInput.sendKeys(newPassword);\r\n\r\n            anamenu.sifreAtamaEkraniGoz.click();\r\n            waitFor(1000);\r\n            anamenu.sifreAtamaEkraniGoz.click();\r\n            waitFor(1000);\r\n\r\n            anamenu.sifreAtamaEkraniTik.isDisplayed();\r\n\r\n            // \"Güncelle\" butonuna tıklama\r\n            anamenu.guncelle.click();\r\n            waitFor(1000);\r\n\r\n            //\"guncellendi popup\"\r\n            anamenu.sifreGuncellendiText.isDisplayed();\r\n            waitFor(1000);\r\n            anamenu.guncellemaPopupOk.click();\r\n            waitFor(1000);\r\n            anamenu.kullaniciyaSifreAtama.click();\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/tester_productprocess_ts/stepDefinitions/Anamenu.java b/src/test/java/tester_productprocess_ts/stepDefinitions/Anamenu.java
--- a/src/test/java/tester_productprocess_ts/stepDefinitions/Anamenu.java	(revision d1a3ab71502418e90c2b21a7c749802d27e8a3fa)
+++ b/src/test/java/tester_productprocess_ts/stepDefinitions/Anamenu.java	(date 1725360485093)
@@ -465,6 +465,7 @@
             anamenu.guncellemaPopupOk.click();
             waitFor(1000);
             anamenu.kullaniciyaSifreAtama.click();
+            Driver.getDriver().close();
         }
     }
 }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_08_2024_14_31__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_08_2024_14_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_08_2024_14_31__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_08_2024_14_31__Changes_.xml	(revision d1a3ab71502418e90c2b21a7c749802d27e8a3fa)
+++ /dev/null	(revision d1a3ab71502418e90c2b21a7c749802d27e8a3fa)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_08_2024_14_31_[Changes]" date="1724675499488" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_08_2024_14_31_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26.08.2024 14:31 [Changes]" />
-</changelist>
\ No newline at end of file
